<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUAAAATAAAAMwAAAFoAAAB3AAAAgAAAAXoAAABnAAAAUAAA
        ADsAAAAnAAAAFwAAAA0AAAAIAAAABgAAAAMAAAABAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAsAAAAXAAAALgAAAE0DGglyDmYl0CWcReYskUfMEDEYnAAA
        AIsAAACCAAAAcwAAAGAAAABNAAAAOwAAAC4AAAAjBAQEGQkJCQ8KCgoKKioqBLCvrwGrq6sBq6usAq+u
        sAKqqasCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARAAAAGwAAACIAAAApAAAALAY7FEEMfCnVE3It/2fS
        g/xf1H31NJpPiAAAADUAAAA0AAAAMAAAACwBAQEoAgICJAUFBR8HBwcZDA0NFhcXFxYaGRkTHR4eFh0d
        HxkeHiAZHh4eFh8fHxAnJycICwsLBAAAAAIAAAAAAAAAAAAAAAcAAAAJAAAACQAAAAgAAAAHAAAACAtm
        IyILWSDfTqRl/4Xjnv934ZP/T8dvfBAuGBIAAAAOAAAADgAAAA0AAAAMAAAADgAAABEAAAAUAAAAGAAA
        ABwAAAAgAAAAIQAAAB4AAAAbAAAAFwAAABIAAAALAAAABwAAAAQAAAAAAAAAAAAAAAAAAAABAAAAAQEB
        AQEDBAMBBAQEAiSEPYk7p1j/l+er/4Xnn/+H6aH0fuOXy3rhlLBu2Yt7Ur5uJAAAAAcAAAAHAAAACQAA
        AAoAAAALAAAADAAAAAwAAAAMAAAACQAAAAkAAAAJAAAACAAAAAYAAAAGAAAABAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAADfEXBpCxWSzXNV8/27di/944ZT/hOee/5TurP+j9bn/svvF/7T8x/+e87T0deCRpkHD
        YjcAAAACAAAAAgAAAAMAAAACAAAAAgAAAAIAAAABAAAAAQAAAAIAAAACAAAAAgAAAAIAAAABAAAAAAAA
        AAAAAAAAAAAAAAAAAAAxwlcWN7xb41LQc/9e1n7/a9uI/3jhlP+E55//ku2q/5/ztf+s+cH/tv3I/7L7
        xf+n97v/iemi9VvVe4kpokoGAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAAAAEAAAABAAAAAQAA
        AAEAAAAAAAAAAAAAAAAAAAAAML5WLSapSc00w1n/Ssxt/13Vff9o2of/deCS/4LmnP+P7Kf/mvCx/6T1
        uf+o97z/pPW5/5vxsf+T7qv/heif/1TRdaYxwVcJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuuFKhMLtV/jTGW/84xl7/VNJ2/2fbhv9x34//fOOY/4jo
        of+R7Kn/mPCw/5rxsf+Y8K//k+2q/4jpoP9/5Jn/c9+Q/0fLaXwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADC0U984yV7/Oc5h/zfLXv89zWP/V9d4/27f
        i/9445T/gOeb/4fpoP+M6qX/jeum/4vqpP+H6KD/f+SZ/3Xgkf9t3Ir/WtR74zfEXEIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKJpH6TS8WP881GX/PNJj/zrR
        Yv890GP/U9h3/2zhi/965pb/f+ea/4Honf+C6J3/gOec/3zlmP924ZL/bd6L/2TZg/9Y03n/OMZehgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYbC+/LJxK/0Tb
        bP9A2Gj/QNho/z7WZv891WX/Sdhu/13ef/9v443/eOeV/3nmlv935pX/c+SR/27gi/9m3oX/Xdl+/1LU
        df86ymCrAAAAAPetRhr3rkRe97FCj/arR332qkgRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABJg
        J3kdeDX/TtFw/0ffbv9B3mr/Q9xr/0Lbav8/2mn/QNlo/0jabv9U3Xn/YOGC/2bih/9m4Yf/ZOCE/13e
        gP9W23j/TNVw/zzPY5ikZx5MxYkr0uKrLPf0wkf097VbovapSQwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAGG8uHxt6NN4rlEb/Xdl+/07ldf9C4mz/ReFu/0Xgbv9E323/Qt1r/0Hcav9C22n/RNts/0jb
        bv9H227/Rtlt/0LYav8+02b/fqdGs96lL/r61yL//OIw//TNb+D0vXgaAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAH4k7SSSVQu4snkv/b+GL/2briP9L6HT/ROZv/0Xmb/9G5HD/R+Nw/0bh
        b/9E4G7/Qt9s/0Deav9B3Wr/R91v/0q1Tf/vxiv/+9sf//zjGP/964P++s2PagAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKKZKPy2zUdIyr1P/UcVw/3rnlv9u8I//Xe2D/1Hr
        ev9H6nL/ROhw/0fncv9O53f/V+d8/1zdfv9SsE//4M8k//veHP/84hn//ecU//3saf/5x0GO969DEgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMLxVGC69VIcnrErpLaVM/0Ov
        X/9ly4D/dt6S/3zll/995pj/bt6L/2PPgP8+qlj/Y6Q5/+TLJ//72iD//OAa//3mFf/97BD//vIL//3x
        DP/6zyrH9qpHJwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACau
        SRs6mz17S5Az+EGWNP8pijD/F4As/yaCLP8/jS7/Zpow/7i1L//6zSv/+tMl//vbHv/84hj//eoS//3x
        DP/+9gf///oE//76Bf/70yXW9qpIIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAKaBKn2omSn/o7Ez/32jMv9hmTH/e6Ey/6OtMf/QvDD/9Mos//rPKf/61SP/+9we//zj
        GP/96xH//fIL///6BP///AL//vcH//3yC//5xy+/9qdKBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAsnYls9uuI//5zCz/+cku//jFMf/4xDP/+cgv//nNK//50Cj/+tQl//rZ
        If/73h3//OMX//3qEv/98Az//vYH//73B//+8wr//e4O//zkF//3tEBo9qlJDAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAChaB3V0Kcd//rTJ//5zyn/+cws//nJLv/5yC//+c4q//rU
        Jf/71yL/+9sf//zfG//84xj//OgU//3sEP/98A3//fAN//3uD//96BP//OYV//nFM8D3r0Q0AAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAI9aFKu1jBP/9NMf//rXI//60yX/+dEn//nN
        K//5zCz/+tAo//vYIv/73h3//OAa//zjGf/85hX//ekU//3qEv/96hL//OgU//zjGP/84Br/+cky3fex
        Q1cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAfUsMZZBiDf/ixBf/+98c//vb
        H//72SH/+tUk//rSJ//6zyn/+tAo//rXIf/83xz//OMY//zmFv/85hX//OcV//znFf/85Bf//N8a//vd
        Hv/5xzjZ97JFWQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACFUg8XjVgT1q2E
        EP/13xT/++MY//vgGv/73B7/+tog//rWI//60yX/+dEo//rSJv/72CL/+90d//zhGv/84xj//OQX//vj
        Gf/73xr/+9wh//nNUcP3uUtCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AACgZhxPpWsd/LmWDv/z3xf//OcX//zkFf/84hn/+94d//vcH//71yL/+tUk//rRJ//60Cf/+tAo//rR
        J//50Sf/+M8m//jLJP/61V3/+tBwl/i/ShwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAC8fCpguHoo8beUEv/u3iL//O0h//zpEf/85RL/++MX//vgGv/73Rz/+9kf//rX
        Iv/60iX/+tAn//nLJf/3xin/+tVp//DRhuH5yVkZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADZkzlC2JI4z7uLHv/TviP/+e08//3vMf/86h///Ogb//zl
        GP/84Rf/+98a//vbIv/72ir/+dpN/+fOd/7RsVvH27FFIQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADvpUUQ8KZFdcaFMNK2jBz/yrEu/+XU
        Qv/26ln/+e1d//bnWv/25mf/6NRq/86zXPTBpF3Mpn8uTwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2ZM6FMuN
        L03BkSmXy6sj0dW+PvDXwlb21L9k79jFb+LVv2a+y7BOVv7xpBYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/////+AAB/8AAAAfAAAAAwAAAAHAAAAB+AAAAfAAAAHgAAf/4AAH/+AA
        A//gAAP/4AACD+AAAA/gAAAf8AAAP/gAAB/8AAAP/wAAB/+AAAP/gAAB/4AAAf+AAAH/gAAB/4AAAf/A
        AAH/4AAD//AAB//4AB///gA///////////8=
</value>
  </data>
</root>