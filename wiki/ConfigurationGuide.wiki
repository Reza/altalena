== ivrworx Configuration ==
ivrworx is configured by configuration file in JSON format, which can be supplied as a first argument to ivrworx run. If this argument isn't supplied ivrworx will look for conf.json in root directory. Any key value which starts with '$' sign will be replaced with corresponding environment variable value. *All configuration values should be present*.

== Configuration Parameters ==

_*sync_log*_

_type:boolean_

Indicates whether logging infrastructure works in synchronous or asynchronous mode. When working in synchronous mode the calls to logging outputs are made in the context of the calling thread. In asynchronous mode logging messages are sent to special logging thread. It improves the efficiency of logging, however synchronous mode preserves the order between messages more correctly and is better for debugging purposes.

{{{	
"sync_log"  : true
}}}

----

_*resip_log*_

ivrworx uses resiprocate sip stack. resip_log indicates the debugging level of facilities for respirocate sip stack. Valid subsystems: - APP,CONTENTS,DNS,DUM,NONE,PRESENCE,SDP,SIP,TRANSPORT,STATS. The values of log level are the same that used  

{{{
"resip_log" : "SIP|DBG,TRANDSPORT|INF"
}}}

----

_*debug_outputs*_
	

The list of logging messages terminators

Currently supported:-

- console - console output
- debug - windows debug output (use DebugViewer.exe)
- syslog - syslog daemon

{{{
"debug_outputs" : "console,debug",
}}}
	
----
_*debug_level*_

Logging level of ivrworx. Valid values: OFF|CRT|WRN|DBG|TRC

"debug_level"  : "DBG"
----

_*syslogd_host*_

ip address of syslogd server (?) can be resolved

{{{
"syslogd_host" : "127.0.0.1"
}}}

----

_*syslogd_port*_

syslod port 

{{{
"syslogd_port" : 515
}}}

----

_*ivr_sip_host*_

ivr sip host name to bind 
  
{{{
"ivr_sip_host": "$COMPUTERNAME"
}}}

----

_*ivr_sip_port*_

sip port to bind on

example:
{{{
"ivr_sip_port": 5060
}}}

----

_*precompile"*_

Indicates whether lua ivr script should be pre-compiled on boot. This improves efficiency of starting up the script but disables user to hot swap the script.
    
{{{
"precompile" : false
}}}

----

_*super_script*_

location of the lua super script. Relative path are taken relatively to ivrworx root installation directory

{{{
"super_script": "scripts\\super.lua",
}}}

----

_*super_mode*_

Super mode may run in sync in async mode. While running in sync mode ivr will not accept any incoming call. Async mode means the that incoming calls will be accepted in parallel. 

{{{
"super_mode":   "sync"
}}}

----

_*sip_session_timer_enabled*_

if sip session timer is enabled ivrworx will timer support into SIP renegotiation.

{{{
"sip_session_timer_enabled" : true,
}}}

----

if sip session timer is enabled ivrworx will timer support into SIP renegotiation.

{{{
    "sip_refresh_mode" : "prefer_local",
}}}

----

_*sip_default_session_time*_

Sip default session time

{{{
"sip_default_session_time" : 180
}}}

----

_*ring_timeout*_
    
Ring timeout in outgoing calls    

{{{
"ring_timeout" : 20, 
}}}
    
----

_*from_id*_

ANI of the ivrworx application. It will appear in "From:" SIP header.

{{{
"from_id" : "ivrworx",
}}}

----

_*from_display_name*_

Caller id of the ivrworx application. It will appear in "From:" SIP header.
    
{{{
"from_display_name": "ivrworx"
}}}
    
----

If MRCP integration is enabled. ivrworx will try to establish MRCP connection for every incoming call to have TTS service readily available.

{{{
"mrcp_enabled": true
}}}

----

The directory which includes unimrcp configuration file. See here for more info.

{{{
"unimrcp_conf_dir": "./unimrcp"
}}}

----

{{{
"unimrcp_client_profile": "MRCPv2-Default"
}}}

----

name of unimrcp log file.

{{{
"unimrcp_log_file": "unimrcpclient",
}}}

----

If rtsp is enabled then ivrworx will open a session in built-in streamer server.

{{{
"rtsp_enabled": true
}}}

----

top port of rtp proxy range. Used for connection media legs of the call.

{{{
"rtp_proxy_base_port" : 8000
}}}

----

bottom port of rtp proxy range. Used for connection media legs of the call.

{{{
"rtp_proxy_top_port" : 9000
}}}

----

Number of connections that should be pooled. For example if you want to support 300 calls with rtps and mrcp enabled you will need 900 connections.

{{{
"rtp_proxy_num_of_connections" : 100
}}}

----

host name for rtp proxy to bind on.

{{{
"rtp_proxy_ip" : "$COMPUTERNAME"
}}}

----
    
Path to lua script file that should be run upon incoming call.

{{{
"script_file" : "scripts\\test.lua",
}}}

----

The list of supported codecs. Currently it includes PCMU,PCMA and SPEEX only.

{{{    
    "codecs": [
        {
            "name": "PCMU" 
        },
        {
            "name": "PCMA" 
        }, 
        {
            "name": "SPEEX" 
        } 
    ]

}}}