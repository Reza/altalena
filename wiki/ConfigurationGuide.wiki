== ivrworx Configuration ==
ivrworx is configured by configuration file in JSON format, which can be supplied as a first argument to ivrworx run. If this argument isn't supplied ivrworx will look for conf.json in root directory. Any key value which starts with '$' sign will be replaced with corresponding environment variable value. *All configuration values should be present*.

== Configuration Parameters ==

_*sync_log*_

_type:boolean_

Indicates whether logging infrastructure works in synchronous or asynchronous mode. When working in synchronous mode the calls to logging outputs are made in the context of the calling thread. In asynchronous mode logging messages are sent to special logging thread. It improves the efficiency of logging, however synchronous mode preserves the order between messages more correctly and is better for debugging purposes.

{{{	
"sync_log"  : true
}}}

----

_*resip_log*_

_type: string_

ivrworx uses [www.resiprocate.org resiprocate] sip stack. resip'_'log indicates the debugging level of facilities for respirocate sip stack. Valid subsystems: - APP,CONTENTS,DNS,DUM,NONE,PRESENCE,SDP,SIP,TRANSPORT,STATS. The values of log level are the same that used  

{{{
"resip_log" : "SIP|DBG,TRANDSPORT|INF"
}}}

----

_*debug_outputs*_

_type: string_

The list of logging messages terminators

Currently supported:-

- console - console output
- debug - windows debug output. Use [http://technet.microsoft.com/en-us/sysinternals/bb896647.aspx Debug View forWindows)
- syslog - syslog daemon. There are many clients. You may use [http://www.kiwisyslog.com/products/ kiwi logging server] which is free.

{{{
"debug_outputs" : "console,debug"
}}}
	
----
_*debug_level*_

_type : string_

Logging level of ivrworx. Valid values: OFF|CRT|WRN|DBG|TRC

OFF - no logging 
CRT - Critical
WRN - Warning
DBG - Debug (messages)
TRC - Trace (every call to function is logged)

"debug_level"  : "DBG"

----

_*syslogd_host*_

_type : string_

ip address of syslog  daemon server. (?) can be resolved

{{{
"syslogd_host" : "127.0.0.1"
}}}

----

_*syslogd_port*_

_type : number_

syslog daemon   port 

{{{
"syslogd_port" : 515
}}}

----

_*ivr_sip_host*_

_type : string_

ivr sip host name to bind 
  
{{{
"ivr_sip_host": "$COMPUTERNAME"
}}}

----

_*ivr_sip_port*_

_type : number_

sip port to bind on

example:
{{{
"ivr_sip_port": 5060
}}}

----

_*precompile*_

Indicates whether lua ivr script should be pre-compiled when ivrworx starts up. This improves efficiency of starting up the script but disables user to hot swap the script.

_type : boolean_
    
{{{
"precompile" : false
}}}

----

_*super_script*_


_type : string_

location of the lua super script. Relative path are taken relatively to ivrworx root installation directory.

{{{
"super_script": "scripts\\super.lua",
}}}

----

_*super_mode*_

_type : string_

Super script may run in sync in async mode. While running in sync mode ivr will not accept any incoming call before super script is finished. Async mode means the that incoming calls may be accepted without waiting for super script to finish. 

valid values : sync, async

{{{
"super_mode":   "sync"
}}}

----

_*sip_session_timer_enabled*_

_type : boolean_

if sip session timer is enabled ivrworx will put timer support into SIP renegotiation.

{{{
"sip_session_timer_enabled" : true
}}}

----

_*sip_refresh_mode*_

_type : string_

Indicates the preference for sip session refresher.

valid values: prefer_local, prefer_remote, prefer_uas, prefer_uac, prefer_none

{{{
    "sip_refresh_mode" : "prefer_local"
}}}

----

_*sip_default_session_time*_

_type : number_

Sip default session refreshment time.

{{{
"sip_default_session_time" : 180
}}}

----

_*ring_timeout*_

_type : number_
    
Ring timeout in outgoing calls.    

{{{
"ring_timeout" : 20
}}}
    
----

_*from_id*_

_type : sting_

ANI of the ivrworx application. It will appear in "From:" SIP header.

{{{
"from_id" : "ivrworx",
}}}

----

_*from_display_name*_

_type : string_

Caller id of the ivrworx application. It will appear in "From:" SIP header.
    
{{{
"from_display_name": "ivrworx"
}}}
    
----

_*mrcp_enabled*_

ivrworx using [http://www.unimrcp.org/ unimrcp]framework to connect to MRCP service providers. If MRCP integration is enabled. ivrworx will try to establish MRCP connection for every incoming call to have TTS service readily available. Enable it if you want to use speak or speakmrcp api.

_type : boolean_

{{{
"mrcp_enabled": true
}}}

----

_*unimrcp_conf_dir*_

_type : string_

The directory which includes unimrcp XML configuration file. More info [http://code.google.com/p/unimrcp/wiki/ConfigurationGuide here].Relative path are taken relatively to ivrworx root installation directory.

{{{
"unimrcp_conf_dir": "./unimrcp"
}}}

----

_*unimrcp_client_profile*_

_type : string_

profile to use in unimrcp XML configuration file. 

{{{
"unimrcp_client_profile": "MRCPv2-Default"
}}}

----

_*unimrcp_log_file*_

name of unimrcp log file.

_type : string_

{{{
"unimrcp_log_file": "unimrcpclient",
}}}

----

_*rtsp_enabled*_

If rtsp is enabled then for every call ivrworx will open a session to built-in streamer server, to have streaming resource readily available. Enable it if you want to use play ivrworx api.

_type : boolean_

{{{
"rtsp_enabled": true
}}}

----

_*rtp_proxy_base_port*_

_type : number_

bottom port of rtp proxy range. Used for connection media legs of the call.

{{{
"rtp_proxy_base_port" : 8000
}}}

----

_*rtp_proxy_top_port*_

_type : number_

top port of rtp proxy range. Used for connection media legs of the call.

{{{
"rtp_proxy_top_port" : 9000
}}}

----

_*rtp_proxy_num_of_connections*_

_type : number_

Number of connections that should be pooled. For example if you want to support 300 calls with rtps and mrcp enabled you will need 900 connections.

{{{
"rtp_proxy_num_of_connections" : 100
}}}

----

_*rtp_proxy_ip*_

_type : string_

host name for rtp proxy to bind on.

{{{
"rtp_proxy_ip" : "$COMPUTERNAME"
}}}

----
    
Path to lua script file that should be run upon incoming call.

{{{
"script_file" : "scripts\\test.lua",
}}}

----

The list of supported codecs. Currently it includes PCMU,PCMA and SPEEX only.

_type : array_
 

{{{    
    "codecs": [
        {
            "name": "PCMU" 
        },
        {
            "name": "PCMA" 
        }, 
        {
            "name": "SPEEX" 
        } 
    ]

}}}