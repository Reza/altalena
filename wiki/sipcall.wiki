Encapsulates SIP 

== `:new(...)` ==
_ctor_
creates sipcall object

== `:makecall(...)` ==

|| *named parameter* || *description* ||
|| dest || destination ||
|| timeout || client side timeout ||
|| sdp || sdp string to offer (may be used insted of offer/type)||
|| remoteoffer || raw remote offer ||
|| localoffer || raw local offer ||
|| type || type ||
|| H_XXX || XXX header will be added to the SIP message ||


== `:waitfordtmf(...)` ==

|| *named parameter* || *description* ||
|| pattern || pattern to collect (?=[1..9] `+` and `*` - has usual meaning) ||
|| interdigittimeout || timeout between each digits||


===example 1===
Makes call to the destination, the INVITE sent is empty the call should be answered lately. 

{{{
local caller = sipcall:new()
caller:makecall{dest="sip:24001@192.168.150.3", timeout=15}

localoffer = [[v=0
o=alice 2890844526 2890844526 IN IP4 host.ivrworx.com
s=
c=IN IP4 192.168.150.3
t=0 0
m=audio 49170 RTP/AVP 0
a=rtpmap:0 PCMU/8000

]]

caller:answer{sdp=localoffer}, "caller:answer")

}}}


===example 2 B2B proxy===
{{{
local leg1 = sipcall:new()
local leg2 = sipcall:new()

leg1:makecall{dest="sip:24001@192.168.150.3", timeout=15}
leg2:makecall{dest="sip:6095@192.168.150.3", sdp=leg1:remoteoffer(), timeout=15}

leg1:answer{sdp=leg2:remoteoffer()}

}}}