AC_INIT(configure.in)
AM_INIT_AUTOMAKE(emiplib, 0.16.1)

MIPCONFIG_BIGENDIAN="// Little endian system"
MIPCONFIG_SUPPORT_SNDFILE="// No support for libsndfile"
MIPCONFIG_SUPPORT_AUDIOFILE="// No support for libaudiofile"
MIPCONFIG_SUPPORT_QT="// No support for Qt"
MIPCONFIG_SUPPORT_ALSA="// No support for ALSA"
MIPCONFIG_SUPPORT_SPEEX="// No speex support"
MIPCONFIG_SUPPORT_GSM="// No GSM support"
MIPCONFIG_SUPPORT_LPC="// No LPC support"
MIPCONFIG_SUPPORT_AVCODEC="// No libavcodec support"
MIPCONFIG_SUPPORT_INTELIPP="// No support for the Intel IPP library"
MIPCONFIG_SUPPORT_ESD="// No support for esd"
MIPCONFIG_SUPPORT_JACK="// No support for JACK"
MIPCONFIG_SUPPORT_VIDEO4LINUX="// No support for video4linux"
MIPCONFIG_SUPPORT_OSS="// No support for OSS"
MIPCONFIG_SUPPORT_SDLAUDIO="// No support for SDL audio"
MIPCONFIG_SUPPORT_OPENAL="// No support for OpenAL"
MIPCONFIG_SUPPORT_PORTAUDIO="// No support for PortAudio"
MIPCONFIG_GPL="// No GPL components will be compiled"

MIPLINKLIBS="$LDFLAGS"
MIPINCLUDES="$CPPFLAGS"
MIPGPL="no"
MIPQT="no"
MIPAVCODEC="no"

if test "BLA$CXXFLAGS" = "BLA" ; then
	dnl CXXFLAGS="-g -Werror -Wall"
	CXXFLAGS="-O2 "
fi

AC_LANG(C++)
AC_PROG_CXX
AM_PROG_LIBTOOL

dnl ---------------------------------------------------------------------------
dnl Check enable GPL components
dnl ---------------------------------------------------------------------------

AC_ARG_ENABLE(gpl,[  --enable-gpl            Enable compilation of GPL components],
	      [ if test $enableval = "yes" ; then 
	       		MIPGPL="yes" ;  
			MIPCONFIG_GPL="#define MIPCONFIG_GPL" ; 
		fi ], [])

dnl ---------------------------------------------------------------------------
dnl Check Intel IPP support
dnl ---------------------------------------------------------------------------

AC_ARG_ENABLE(intelipp,[  --enable-intelipp       Enable support for the Intel IPP library],
	      [ if test $enableval = "yes" ; then
	            MIPCONFIG_SUPPORT_INTELIPP="#define MIPCONFIG_SUPPORT_INTELIPP"
		fi ] , [])

dnl ---------------------------------------------------------------------------
dnl Check Qt
dnl ---------------------------------------------------------------------------

MIPUSEQT="no"

AC_ARG_ENABLE(qt,[  --enable-qt             Enable Qt support],
	      [ if test $enableval = "yes" ; then
	       		MIPQT="yes"
		fi ], [])

if test "$MIPQT" = "yes" ; then
	AC_PATH_QT
	if test "$have_qt" = "yes" ; then
		MIPCONFIG_SUPPORT_QT="#define MIPCONFIG_SUPPORT_QT"
		MIPINCLUDES="$MIPINCLUDES $QT_INCLUDES"
		MIPLINKLIBS="$MIPLINKLIBS -L$qt_libdir $LIBQT $X_LDFLAGS"
		MIPUSEQT="yes"
	fi
fi

AM_CONDITIONAL(MIP_USEQT, test "$MIPUSEQT" = "yes")

dnl ---------------------------------------------------------------------------
dnl Check for the jthread headers
dnl ---------------------------------------------------------------------------

searchdirs="/usr/include/jthread /usr/local/include/jthread"

AC_MSG_CHECKING(for JThread include files)
AC_ARG_WITH(jthread-includes,[  --with-jthread-includes Directory where JThread include files are located],
	[
	if test -e "$withval"/jthread.h && test -e "$withval"/jmutex.h ; then
		AC_MSG_RESULT(in "$withval")
		AC_MSG_CHECKING(JThread version)
		AC_COMPILE_IFELSE([ 
			#include "$withval/jthread.h"
			class MyThread : public JThread
			{
			public:
				void *Thread() { JThread::ThreadStarted(); return 0; }
			};],[
			MIPINCLUDES="$MIPINCLUDES -I$withval"
			MIPLINKLIBS="$MIPLINKLIBS -ljthread -lpthread"
			AC_MSG_RESULT(>= 1.1.0) ],[
			AC_MSG_RESULT(< 1.1.0)
			AC_MSG_ERROR(You need at least JThread version 1.1.0)])
	else
		AC_MSG_RESULT(not found)
		AC_MSG_ERROR(The JThread include files were not found in $withval)
	fi
	],
	[
		for i in $searchdirs ; do
			if test -e $i/jthread.h && test -e $i/jmutex.h ; then
				JTHREADINCLUDEDIR="$i"
				AC_MSG_RESULT($i)
				break
			fi
		done
		if test "BLAAI$JTHREADINCLUDEDIR" = "BLAAI" ; then
			AC_MSG_RESULT(not found)
			AC_MSG_ERROR(Unable to locate the JThread include files. Please specify the include path with --with-jthread-includes)
		else
			AC_MSG_CHECKING(JThread version)
			AC_COMPILE_IFELSE([ 
				#include "$JTHREADINCLUDEDIR/jthread.h"
				class MyThread : public JThread
				{
				public:
					void *Thread() { JThread::ThreadStarted(); return 0; }
				};],[
				MIPINCLUDES="$MIPINCLUDES -I$JTHREADINCLUDEDIR"
				MIPLINKLIBS="$MIPLINKLIBS -ljthread -lpthread"
				AC_MSG_RESULT(>= 1.1.0) ],[
				AC_MSG_RESULT(< 1.1.0)
				AC_MSG_ERROR(You need at least JThread version 1.1.0)])
		fi
	])
	
dnl ---------------------------------------------------------------------------
dnl Check for the jrtplib headers
dnl ---------------------------------------------------------------------------

searchdirs="/usr/include/jrtplib3 /usr/local/include/jrtplib3 /usr/include/jrtplib /usr/local/include/jrtplib"

AC_MSG_CHECKING(for JRTPLIB include files)
AC_ARG_WITH(jrtplib-includes,[  --with-jrtplib-includes Directory where JRTPLIB 3.x.x include files are located],
	[
	if test -e "$withval"/rtplibraryversion.h ; then
		JRTPLIBINCLUDES="$withval"
		AC_MSG_RESULT(in $withval)
	else
		AC_MSG_RESULT(not found)
		AC_MSG_ERROR(The JRTPLIB 3.x.x include files were not found in $withval)
	fi
	],
	[
		for i in $searchdirs ; do
			if test -e $i/rtplibraryversion.h ; then
				JRTPLIBINCLUDES="$i"
				AC_MSG_RESULT(in $i)
				break
			fi
		done
		if test "BLAAI$JRTPLIBINCLUDES" = "BLAAI" ; then
			AC_MSG_RESULT(not found)
			AC_MSG_ERROR("Unable to locate the JRTPLIB 3.x.x include files."\
			             "Please specify the include path with --with-jrtplib-includes")
		fi
	])

AC_MSG_CHECKING(if JRTPLIB was compiled with JThread support)
AC_COMPILE_IFELSE([ 
		   #include "$JRTPLIBINCLUDES/rtpconfig.h"
		   int main(void)
		   {
		   #ifndef RTP_SUPPORT_THREAD
		   	   blablabla // generate an error
		   #endif
			   return 0;
		   }],[ AC_MSG_RESULT(yes) ],
		   [ AC_MSG_RESULT(no)
		     AC_MSG_ERROR(JRTPLIB has to be compiled with JThread support) ])
MIPINCLUDES="$MIPINCLUDES -I$JRTPLIBINCLUDES"
MIPLINKLIBS="$MIPLINKLIBS -ljrtp"

dnl ---------------------------------------------------------------------------
dnl libsndfile stuff
dnl ---------------------------------------------------------------------------

AC_CHECK_HEADER(sndfile.h,[MIPCONFIG_SUPPORT_SNDFILE="#define MIPCONFIG_SUPPORT_SNDFILE"
			   MIPLINKLIBS="$MIPLINKLIBS -lsndfile"])

dnl ---------------------------------------------------------------------------
dnl libaudiofile stuff
dnl ---------------------------------------------------------------------------

AC_CHECK_HEADER(audiofile.h,[MIPCONFIG_SUPPORT_AUDIOFILE="#define MIPCONFIG_SUPPORT_AUDIOFILE"
			   MIPLINKLIBS="$MIPLINKLIBS -laudiofile"])

dnl ---------------------------------------------------------------------------
dnl ALSA stuff
dnl ---------------------------------------------------------------------------

AC_CHECK_HEADER(alsa/asoundlib.h,[MIPCONFIG_SUPPORT_ALSA="#define MIPCONFIG_SUPPORT_ALSA"
				  MIPLINKLIBS="$MIPLINKLIBS -lasound"])

dnl ---------------------------------------------------------------------------
dnl Esound stuff
dnl ---------------------------------------------------------------------------

AC_CHECK_HEADER(esd.h,[MIPCONFIG_SUPPORT_ESD="#define MIPCONFIG_SUPPORT_ESD"
				  MIPLINKLIBS="$MIPLINKLIBS -lesd"])

dnl ---------------------------------------------------------------------------
dnl JACK stuff
dnl ---------------------------------------------------------------------------

AC_CHECK_HEADER(jack/jack.h,[MIPCONFIG_SUPPORT_JACK="#define MIPCONFIG_SUPPORT_JACK"
				  MIPLINKLIBS="$MIPLINKLIBS -ljack"])


dnl ---------------------------------------------------------------------------
dnl Speex stuff
dnl ---------------------------------------------------------------------------

AC_CHECK_HEADER(speex/speex.h,[MIPCONFIG_SUPPORT_SPEEX="#define MIPCONFIG_SUPPORT_SPEEX"
			       MIPLINKLIBS="$MIPLINKLIBS -lspeex"])

dnl ---------------------------------------------------------------------------
dnl OSS stuff
dnl ---------------------------------------------------------------------------

AC_CHECK_HEADER(sys/soundcard.h,[MIPCONFIG_SUPPORT_OSS="#define MIPCONFIG_SUPPORT_OSS"])

dnl ---------------------------------------------------------------------------
dnl SDL audio stuff
dnl ---------------------------------------------------------------------------

AC_CHECK_HEADER(SDL/SDL_audio.h,[MIPCONFIG_SUPPORT_SDLAUDIO="#define MIPCONFIG_SUPPORT_SDLAUDIO"
				 MIPLINKLIBS="$MIPLINKLIBS -lSDL"])

dnl ---------------------------------------------------------------------------
dnl video4linux stuff
dnl ---------------------------------------------------------------------------

AC_CHECK_HEADER(linux/videodev.h,[MIPCONFIG_SUPPORT_VIDEO4LINUX="#define MIPCONFIG_SUPPORT_VIDEO4LINUX"])

dnl ---------------------------------------------------------------------------
dnl libavcodec stuff
dnl ---------------------------------------------------------------------------

AC_ARG_ENABLE(avcodec,[  --enable-avcodec        Enable libavcodec support],
	      [ if test $enableval = "yes" ; then
	       		MIPAVCODEC="yes"
	        fi ], [])

if test $MIPAVCODEC = "yes" ; then
	AC_CHECK_HEADER(ffmpeg/avcodec.h,[MIPCONFIG_SUPPORT_AVCODEC="#define MIPCONFIG_SUPPORT_AVCODEC"
				MIPLINKLIBS="$MIPLINKLIBS -lavcodec -lavutil"])
fi

dnl ---------------------------------------------------------------------------
dnl GSM support
dnl ---------------------------------------------------------------------------

AC_ARG_ENABLE(gsm,[  --disable-gsm           Disable GSM codec],
	      [ if test $enableval = "yes" ; then
	       		MIPCONFIG_SUPPORT_GSM="#define MIPCONFIG_SUPPORT_GSM"
	        fi ], [ MIPCONFIG_SUPPORT_GSM="#define MIPCONFIG_SUPPORT_GSM" ])

dnl ---------------------------------------------------------------------------
dnl LPC support
dnl ---------------------------------------------------------------------------

AC_ARG_ENABLE(lpc,[  --disable-lpc           Disable LPC codec],
	      [ if test $enableval = "yes" ; then
	       		MIPCONFIG_SUPPORT_LPC="#define MIPCONFIG_SUPPORT_LPC"
	        fi ], [ MIPCONFIG_SUPPORT_LPC="#define MIPCONFIG_SUPPORT_LPC" ])

dnl ---------------------------------------------------------------------------
dnl OpenAL support
dnl ---------------------------------------------------------------------------

AC_CHECK_HEADER(AL/al.h,[MIPCONFIG_SUPPORT_OPENAL="#define MIPCONFIG_SUPPORT_OPENAL"
				MIPLINKLIBS="$MIPLINKLIBS -lopenal"])

dnl ---------------------------------------------------------------------------
dnl PortAudio support
dnl ---------------------------------------------------------------------------

AC_CHECK_HEADER(portaudio.h,[MIPCONFIG_SUPPORT_PORTAUDIO="#define MIPCONFIG_SUPPORT_PORTAUDIO"
				MIPLINKLIBS="$MIPLINKLIBS -lportaudio"])

dnl ---------------------------------------------------------------------------
dnl Check if it's a big endian or little endian system
dnl Note that we must be careful when a cross-compiler is being used...
dnl ---------------------------------------------------------------------------

if test $cross_compiling = "yes" ; then
	cat << EOF

ASSUMING TARGET IS BIG ENDIAN:

  The script detected a cross-compiler on your system. This can mean that
  there really is a cross-compiler installed, or that for some other reason,
  a simple program could not be run. You should check the config.log file
  to verify this.
  Since we are assuming a cross-compiler, we won't be able to actually test
  any program. More important, we cannot test if the system is big or little
  endian.
  For now, big endian is assumed. If this assumption should be wrong, you will
  have to comment the appropriate line in 'mipconfig_unix.h'

EOF
	MIPCONFIG_BIGENDIAN="#define MIPCONFIG_BIGENDIAN // comment this if the target is a little endian system"
else
	AC_C_BIGENDIAN
	if test $ac_cv_c_bigendian = "yes" ; then
		MIPCONFIG_BIGENDIAN="#define MIPCONFIG_BIGENDIAN"
	fi
fi

dnl ---------------------------------------------------------------------------
dnl That's it.
dnl ---------------------------------------------------------------------------

AC_SUBST(MIPINCLUDES)
AC_SUBST(MIPLINKLIBS)
AC_SUBST(MIPCONFIG_BIGENDIAN)
AC_SUBST(MIPCONFIG_SUPPORT_SNDFILE)
AC_SUBST(MIPCONFIG_SUPPORT_AUDIOFILE)
AC_SUBST(MIPCONFIG_SUPPORT_QT)
AC_SUBST(MIPCONFIG_SUPPORT_ALSA)
AC_SUBST(MIPCONFIG_SUPPORT_SPEEX)
AC_SUBST(MIPCONFIG_SUPPORT_GSM)
AC_SUBST(MIPCONFIG_SUPPORT_LPC)
AC_SUBST(MIPCONFIG_SUPPORT_AVCODEC)
AC_SUBST(MIPCONFIG_SUPPORT_INTELIPP)
AC_SUBST(MIPCONFIG_SUPPORT_ESD)
AC_SUBST(MIPCONFIG_SUPPORT_JACK)
AC_SUBST(MIPCONFIG_SUPPORT_VIDEO4LINUX)
AC_SUBST(MIPCONFIG_SUPPORT_OSS)
AC_SUBST(MIPCONFIG_SUPPORT_SDLAUDIO)
AC_SUBST(MIPCONFIG_SUPPORT_OPENAL)
AC_SUBST(MIPCONFIG_SUPPORT_PORTAUDIO)
AC_SUBST(MIPCONFIG_GPL)

AC_OUTPUT(Makefile \
	  src/Makefile \
	  src/core/mipconfig_unix.h \
	  src/thirdparty/Makefile \
	  src/thirdparty/lpc/Makefile \
	  src/thirdparty/gsm/Makefile \
	  src/thirdparty/gsm/doc/Makefile \
	  examples/Makefile \
	  doc/Makefile \
          pkgconfig/Makefile \
          pkgconfig/emiplib.pc \
          pkgconfig/emiplib-uninstalled.pc \
	  )

if test $MIPGPL = "yes" ; then
	cat << EOF

License: GPL
	
You have specified that you want to use components licensed under the terms 
of the GPL. By specifying this option, the GPL license also applies to this 
library. The complete text of the GPL license can be found in the file 
LICENSE.GPL included in the source code archive.

EOF
else
	cat << EOF

License: LGPL

The library is licensed under the terms of the LGPL, the full text can be 
found in the file LICENSE.LGPL. However, depending on the libraries your 
application links with, it may be possible that another license has to be 
taken into account as well. For example, if the libavcodec library you link 
with was compiled as a GPL library, then your application has to respect the 
terms of the GPL, even though it may only make use of libavcodec indirectly 
(by using the EMIPLIB libavcodec component). Similarly, if you use the Qt 
library with a GPL license, linking with the Qt library will cause your
application to be GPL as well. 
	
EOF
fi

sleep 3

echo
echo "Have fun!"
echo

